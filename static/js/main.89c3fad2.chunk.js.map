{"version":3,"sources":["static/logo.svg","components/FamilyTreeNode.js","components/FamilyTreeNodeLine.js","components/FamilyTree.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FamilyTreeNode","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","person","drawId","gender","lastName","firstName","x","y","width","height","isSelected","isBeingDragged","isClicked","renderNode","bind","assertThisInitialized","itemName","e","stopPropagation","console","log","setState","selectionChanged","style","className","innerClassName","react_default","a","createElement","_this2","extendsProps","onMouseDown","onClick","handleClick","lib","size","position","onDragStart","d","stateChanged","onDrag","onDragStop","positionChanged","enableResizing","enableUserSelectHack","Component","TAG","FamilyTreeNodeLine","fromNodes","toNodes","newProps","from","to","lineFromX","lineFromY","lineToX","lineToY","Math","abs","isStepped","isFromHigher","widthHalf","stylePart1","borderTop","top","left","lineWidth","styleStep","borderLeft","stylePart2","idPart1","idStep","idPart2","MenuItems","RelationType","PersonNode","isNullOrUndefined","Relation","mainPersonId","relatedPersonId","relationType","value","FamilyTree","alert","mouseClickX","mouseClickY","nodes","relations","selectedNodeId","contextMenu","mainContextMenu","onChildSelectionChanged","onChildPositionChanged","onChildStateChanged","hideAlert","addFamilyTreeNode","renderEditForm","getSelectedNode","getNodeById","getSelectedNodeRelations","refLastName","React","createRef","refFirstName","refGenderMale","htmlFor","ref","type","name","defaultChecked","paddingLeft","menuItem","innerStyle","maxWidth","react_bootstrap_sweetalert_default","showCancel","title","onCancel","onConfirm","searchId","found","i","length","push","current","checked","newNode","offset","$","clickX","pageX","clickY","pageY","node","clickedNodeIndex","isInNode","button","selectedNodeContextMenu","childId","childState","react_contexify_lib","handleMenuItemClick","_this3","nodesElements","linesElements","nodeDrawId","components_FamilyTreeNode","relation","mainNode","relatedNode","components_FamilyTreeNodeLine","renderFamilyTree","App","message","fetch","then","res","json","result","Message","error","float","src","logo","alt","textAlign","components_FamilyTree","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89c3fad2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport Rnd from \"react-rnd\";\r\n\r\nclass FamilyTreeNode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: props.person.id,\r\n            drawId: props.drawId,\r\n            gender: props.person.gender,\r\n            lastName: props.person.lastName,\r\n            firstName: props.person.firstName,\r\n            x: props.person.x,\r\n            y: props.person.y,\r\n            width: props.width,\r\n            height: props.height,\r\n            isSelected: props.person.isSelected,\r\n            isBeingDragged: false,\r\n            isClicked: false,\r\n            // relations: props.person.relations\r\n        };\r\n\r\n        this.renderNode = this.renderNode.bind(this);\r\n    }\r\n\r\n    handleMenuItemClick(itemName){\r\n    }\r\n\r\n    handleClick(e){\r\n        e.stopPropagation();\r\n        // console.log('Person id=' + this.state.id + ' was clicked');\r\n\r\n        console.log('Tree node onClick');\r\n        let isSelected = this.state.isSelected;\r\n        isSelected = !isSelected;\r\n        this.setState({isSelected: isSelected}, function() {\r\n            this.props.selectionChanged(this.state.id, this.state.isSelected);\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            id: props.person.id,\r\n            gender: props.person.gender,\r\n            lastName: props.person.lastName,\r\n            firstName: props.person.firstName,\r\n            x: props.person.x,\r\n            y: props.person.y,\r\n            isSelected: props.person.isSelected,\r\n            // relations: props.person.relations\r\n        })\r\n    }\r\n\r\n    renderNode() {\r\n        const style = {\r\n            height: this.props.height,\r\n            width: this.props.width\r\n        };\r\n        let className = this.state.drawId;\r\n        let innerClassName = 'nodeInner';\r\n\r\n        if(this.state.isSelected) innerClassName += ' selected';\r\n        className += this.state.gender ? ' male' : ' female';\r\n\r\n        return (\r\n            <div className={className} style={style}>\r\n                <div className={innerClassName}>\r\n                    <b>{this.state.lastName} {this.state.firstName}</b>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const extendsProps = {\r\n            onMouseDown() {\r\n                console.log('mouse down');\r\n            },\r\n            onClick: (e) => {\r\n                if(this.state.isClicked) this.handleClick(e);\r\n                this.setState({isClicked: false});\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Rnd\r\n                size={{width: this.state.width,  height: this.state.height}}\r\n                position={{x: this.state.x, y: this.state.y}}\r\n                onDragStart = {(e, d) => {\r\n                    console.log('Tree node onDragStart');\r\n                    this.setState({isBeingDragged: true});\r\n                    this.props.stateChanged(this.state);\r\n                }}\r\n                onDrag = {(e, d) => {\r\n                    console.log('dragging...');\r\n                    this.setState({ x: d.x, y: d.y });\r\n                    this.props.stateChanged(this.state);\r\n                }}\r\n                onDragStop = {(e, d) => {\r\n                    console.log('Tree node onDragStop');\r\n                    if(this.state.x === d.x && this.state.y === d.y){\r\n                        this.setState({isClicked: true});\r\n                        return;\r\n                    }\r\n                    this.setState({ x: d.x, y: d.y });\r\n                    this.props.positionChanged(this.state.id, d.x, d.y);\r\n                    this.props.stateChanged(this.state);\r\n                }}\r\n                enableResizing={false}\r\n                enableUserSelectHack={false}\r\n                extendsProps={extendsProps}\r\n                onMouseDown = {() => {console.log('HELP');}}\r\n            >\r\n                {this.renderNode()}\r\n            </Rnd>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FamilyTreeNode;","import {Component} from \"react\";\r\nimport $ from \"jquery\";\r\nimport React from \"react\";\r\n\r\nvar TAG = 'FamilyTreeNode ';\r\n\r\nclass FamilyTreeNodeLine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log('FamilyTreeNodeLine constructor(): from nodes = ');\r\n        // console.log(props.fromNodes);\r\n        // console.log('FamilyTreeNodeLine constructor(): to nodes = ');\r\n        // console.log(props.toNodes);\r\n\r\n        this.state = {\r\n            fromNodes: props.fromNodes,\r\n            toNodes: props.toNodes\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        console.log(TAG + 'componentWillReceiveProps()');\r\n        this.setState({\r\n            fromNodes: newProps.fromNodes,\r\n            toNodes: newProps.toNodes\r\n        })\r\n    }\r\n\r\n    // shouldComponentUpdate() {\r\n    //     // Always update component if the parent component has been updated.\r\n    //     // The reason for this is that we would not only like to update\r\n    //     // this component when the props have changed, but also when\r\n    //     // the position of our target elements has changed.\r\n    //     return true;\r\n    // }\r\n\r\n    render() {\r\n        let from = this.state.fromNodes[0];\r\n        let to = this.state.toNodes[0];\r\n\r\n        let lineFromX = from.x + from.width;\r\n        let lineFromY = from.y + from.height / 2;\r\n        let lineToX = to.x;\r\n        let lineToY = to.y + to.height / 2;\r\n        let width = lineToX - lineFromX;\r\n        let height = lineToY - lineFromY;\r\n        let lineWidth = 2;\r\n\r\n        let isFromOnTheLeft = width > 0;\r\n        if(!isFromOnTheLeft) {\r\n            lineFromX = to.x + to.width;\r\n            lineToX = from.x;\r\n            width = lineToX - lineFromX;\r\n\r\n            lineToY = from.y + from.height / 2;\r\n            lineFromY = to.y + to.height / 2;\r\n            height = Math.abs(lineToY - lineFromY);\r\n        }\r\n\r\n        let isStepped = lineFromY !== lineToY;\r\n        let isFromHigher = height > 0;\r\n\r\n        console.log(TAG + 'render(): from(' + lineFromX + ';' + lineFromY + ') to(' + lineToX + ';' + lineToY + ') width = ' + width);\r\n\r\n        if(isStepped) {\r\n            let widthHalf = width / 2;\r\n            let stylePart1 = {\r\n                borderTop: '5px solid black',\r\n                position: 'absolute',\r\n                top: lineFromY,\r\n                left: lineFromX,\r\n                width: widthHalf,\r\n                height: lineWidth+'px'\r\n            };\r\n            let styleStep = {\r\n                borderLeft: '5px solid black',\r\n                position: 'absolute',\r\n                top: isFromHigher ? lineFromY : lineToY,\r\n                left: lineFromX + widthHalf,\r\n                width: lineWidth+'px',\r\n                height: isFromHigher ? height : height+(lineWidth / 2)\r\n            };\r\n            let stylePart2 = {\r\n                borderTop: '5px solid black',\r\n                position: 'absolute',\r\n                top: lineFromY + height,\r\n                left: lineFromX + widthHalf,\r\n                width: widthHalf,\r\n                height: lineWidth+'px'\r\n            };\r\n\r\n            let idPart1 = 'line-from'+from.id+'-to-'+to.id+'-part-1';\r\n            let idStep = 'line-from'+from.id+'-to-'+to.id+'-step';\r\n            let idPart2 = 'line-from'+from.id+'-to-'+to.id+'-part-2';\r\n\r\n            return (\r\n                <div>\r\n                    <div id={idPart1} style={stylePart1}>&nbsp;</div>\r\n                    <div id={idStep} style={styleStep}>&nbsp;</div>\r\n                    <div id={idPart2} style={stylePart2}>&nbsp;</div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            let style = {\r\n                borderTop: '5px solid black',\r\n                position: 'absolute',\r\n                top: lineFromY,\r\n                left: lineFromX,\r\n                width: width,\r\n                height: lineWidth+'px'\r\n            };\r\n            let id = 'line-from'+from.id+'-to-'+to.id;\r\n\r\n            return (\r\n                <div>\r\n                    <div id={id} style={style}>&nbsp;</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FamilyTreeNodeLine;","import {Component} from \"react\";\r\nimport $ from \"jquery\";\r\nimport React from \"react\";\r\nimport FamilyTreeNode from './FamilyTreeNode'\r\nimport FamilyTreeNodeLine from './FamilyTreeNodeLine'\r\nimport {ContextMenu, ContextMenuProvider, Item} from \"react-contexify\";\r\nimport {SteppedLineTo} from \"react-lineto\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\n\r\nconst familyTreeMenuId = 'family-context-menu';\r\nconst nodeHeight = 120;\r\nconst nodeWidth = 200;\r\n\r\nconst MenuItems = {\r\n    CREATE_PERSON: 'CREATE_PERSON',\r\n    CREATE_SPOUSE: 'CREATE_SPOUSE',\r\n    CREATE_SIBLING: 'CREATE_SIBLING',\r\n    CREATE_PARENT: 'CREATE_PARENT',\r\n    CREATE_CHILD: 'CREATE_CHILD',\r\n    EDIT: 'EDIT',\r\n    DELETE: 'DELETE'\r\n};\r\n\r\nconst RelationType = {\r\n    SIBLING: 'SIBLING',\r\n    SPOUSE: 'SPOUSE',\r\n    PARENT: 'PARENT',\r\n    ADOPTED_CHILD: 'ADOPTED_CHILD',\r\n    CHILD: 'CHILD'\r\n};\r\n\r\nconst RelationAntonym = (relation) => {\r\n    if(relation === RelationType.SIBLING) return RelationType.SIBLING;\r\n    if(relation === RelationType.SPOUSE) return RelationType.SPOUSE;\r\n    if(relation === RelationType.PARENT) return RelationType.CHILD;\r\n    if(relation === RelationType.CHILD) return RelationType.PARENT;\r\n    if(relation === RelationType.ADOPTED_CHILD) return RelationType.PARENT;\r\n};\r\n\r\nclass PersonNode {\r\n    constructor(id, gender, lastName, firstName, x, y, width, height, isSelected) {\r\n        this.id = id;\r\n        this.gender = isNullOrUndefined(gender) ? true : gender;\r\n        this.lastName = isNullOrUndefined(lastName) ? '' : lastName;\r\n        this.firstName = isNullOrUndefined(firstName) ? '' : firstName;;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = isNullOrUndefined(width) ? nodeWidth : width;\r\n        this.height = isNullOrUndefined(height) ? nodeHeight : height;;\r\n        this.isSelected = isSelected;\r\n    }\r\n}\r\n\r\nclass Relation {\r\n    constructor(mainPersonId, relatedPersonId, relationType) {\r\n        this.mainPersonId = mainPersonId;\r\n        this.relatedPersonId = relatedPersonId;\r\n        this.relationType = relationType;\r\n    }\r\n}\r\n\r\nfunction isNullOrUndefined(value) {\r\n    return typeof (value) === \"undefined\" && value === null;\r\n}\r\n\r\n// TODO Пункты меню\r\n// TODO    Создать -> сын (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> дочь (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> отец (недоступно, если уже есть 2 человека в родителях)\r\n// TODO    Создать -> мать (недоступно, если уже есть 2 человека в родителях)\r\n// TODO    Создать -> жена\r\n// TODO    Создать -> муж\r\n// TODO    Создать -> приемный сын (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> приемная дочь (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> приемный отец (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> приемная мать (выбор второго родителя, если было несколько браков)\r\n// TODO Изменить\r\n// TODO Удалить\r\n// TODO Просмотр\r\n// TODO Выбор двух узлов и создание связи\r\n// TODO Не убирать создание нового человека\r\n\r\nclass FamilyTree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alert: null,\r\n            mouseClickX: 0,\r\n            mouseClickY: 0,\r\n            nodes: [],\r\n            relations: [],\r\n            selectedNodeId: null,\r\n            contextMenu: this.mainContextMenu()\r\n        };\r\n\r\n        this.onChildSelectionChanged = this.onChildSelectionChanged.bind(this);\r\n        this.onChildPositionChanged = this.onChildPositionChanged.bind(this);\r\n        this.onChildStateChanged = this.onChildStateChanged.bind(this);\r\n        this.hideAlert = this.hideAlert.bind(this);\r\n        this.addFamilyTreeNode = this.addFamilyTreeNode.bind(this);\r\n        this.renderEditForm = this.renderEditForm.bind(this);\r\n        this.mainContextMenu = this.mainContextMenu.bind(this);\r\n        this.getSelectedNode = this.getSelectedNode.bind(this);\r\n        this.getNodeById = this.getNodeById.bind(this);\r\n        this.getSelectedNodeRelations = this.getSelectedNodeRelations.bind(this);\r\n\r\n        this.refLastName = React.createRef();\r\n        this.refFirstName = React.createRef();\r\n        this.refGenderMale = React.createRef();\r\n    }\r\n\r\n    renderEditForm(person){\r\n        if(person == null) {\r\n            person = new PersonNode();\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label className='edit-form-label' htmlFor='lastName'> Last name: </label>\r\n                    <input className='edit-form-input' id='lastName' ref={this.refLastName} type='text'/>\r\n                </div>\r\n                <div>\r\n                    <label  className='edit-form-label' htmlFor=\"firstName\"> First name: </label>\r\n                    <input className='edit-form-input' id='firstName' ref={this.refFirstName} type='text'/>\r\n                </div>\r\n                <div>\r\n                    <label className='edit-form-label'>Gender: </label>\r\n                    <div className='edit-form-input'>\r\n                        <label>\r\n                            <input type='radio' ref={this.refGenderMale} name='gender' value='male' defaultChecked={!person.gender}/> Male\r\n                        </label>\r\n                        <label style={{paddingLeft: '10px'}}>\r\n                            <input type='radio' name='gender' value='female' defaultChecked={person.gender}/> Female\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleMenuItemClick(menuItem, x, y) {\r\n        let innerStyle = {\r\n            width: 'auto',\r\n            maxWidth: '70%'\r\n        };\r\n\r\n        if(menuItem === MenuItems.CREATE_PERSON) {\r\n            this.setState({\r\n                alert: (\r\n                    <SweetAlert style={innerStyle} showCancel title=\"Enter person's data\" onCancel={this.hideAlert}\r\n                                onConfirm={this.addFamilyTreeNode.bind(this, x, y, null)} onClick={(e) => e.stopPropagation()}>\r\n                        {this.renderEditForm(null)}\r\n                    </SweetAlert>\r\n                )\r\n            });\r\n        }\r\n        else if(menuItem === MenuItems.CREATE_SPOUSE){\r\n            this.setState({\r\n                alert: (\r\n                    <SweetAlert style={innerStyle} showCancel title=\"Enter person's data\" onCancel={this.hideAlert}\r\n                                onConfirm={this.addFamilyTreeNode.bind(this, x, y, RelationType.SPOUSE)}>\r\n                        {this.renderEditForm(null)}\r\n                    </SweetAlert>\r\n                )\r\n            });\r\n        }\r\n        else if(menuItem === MenuItems.CREATE_PARENT){\r\n            this.setState({\r\n                alert: (\r\n                    <SweetAlert style={innerStyle} showCancel title=\"Enter person's data\" onCancel={this.hideAlert}\r\n                                onConfirm={this.addFamilyTreeNode.bind(this, x, y, RelationType.PARENT)}>\r\n                        {this.renderEditForm(null)}\r\n                    </SweetAlert>\r\n                )\r\n            });\r\n        }\r\n        else if(menuItem === MenuItems.CREATE_CHILD){\r\n            this.setState({\r\n                alert: (\r\n                    <SweetAlert style={innerStyle} showCancel title=\"Enter person's data\" onCancel={this.hideAlert}\r\n                                onConfirm={this.addFamilyTreeNode.bind(this, x, y, RelationType.CHILD)}>\r\n                        {this.renderEditForm(null)}\r\n                    </SweetAlert>\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    hideAlert() {\r\n        this.setState({\r\n            alert: null\r\n        });\r\n    }\r\n\r\n    getSelectedNode() {\r\n        return this.getNodeById(this.state.selectedNodeId);\r\n    }\r\n\r\n    getSelectedNodeRelations() {\r\n        if(this.state.selectedNodeId == null) return null;\r\n\r\n        let searchId = this.state.selectedNodeId;\r\n        let relations = this.state.relations;\r\n        let found = [];\r\n        for(let i = 0; i < relations.length; i++) {\r\n            if(relations[i].relatedPersonId === searchId) found.push(relations[i]);\r\n        }\r\n        return found;\r\n    }\r\n\r\n    getNodeById(id) {\r\n        if(id == null) return null;\r\n\r\n        let nodes = this.state.nodes;\r\n        for(let i = 0; i < nodes.length; i++) {\r\n            if (nodes[i].id === id) return nodes[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    addFamilyTreeNode(x, y, relationType, e) { // <-- parameter and event object are shiffled! That's NOT my idea\r\n\r\n        // TODO creating node check intersectaions with other nodes\r\n\r\n        console.log(relationType);\r\n\r\n        let id = this.state.nodes.length;\r\n        let lastName = this.refLastName.current.value;\r\n        let firstName = this.refFirstName.current.value;\r\n        let gender = this.refGenderMale.current.checked;\r\n\r\n        let selectedNodeId = this.state.selectedNodeId;\r\n        let selectedNode = this.getSelectedNode();\r\n        let nodes = this.state.nodes;\r\n        let relations = this.state.relations;\r\n        let newNode =  new PersonNode(id, gender, lastName, firstName, x, y, nodeWidth, nodeHeight, false);\r\n\r\n        if(selectedNodeId !== null) {\r\n            let selectedNodeRelations = this.getSelectedNodeRelations();\r\n\r\n            if(relationType === RelationType.CHILD) relations.push(new Relation(selectedNodeId, id, RelationType.PARENT));\r\n            else relations.push(new Relation(id, selectedNodeId, relationType));\r\n\r\n            nodes[selectedNodeId].isSelected = false;\r\n        }\r\n        nodes.push(newNode);\r\n        this.setState({nodes: nodes, selectedNodeId: null, relations: relations});\r\n        this.hideAlert();\r\n    }\r\n\r\n    isInNode(nodes, x, y){\r\n        for(let i = 0; i < nodes.length; i++){\r\n            if((x >= nodes[i].x && x <= (nodes[i].x + nodeWidth))\r\n                && (y >= nodes[i].y && y <= (nodes[i].y + nodeHeight)))\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    handleClick(e){\r\n        let nodes = this.state.nodes;\r\n        let offset = $('.field').offset();\r\n        let clickX = e.pageX - offset.left;\r\n        let clickY = e.pageY - offset.top;\r\n\r\n        if(this.state.alert != null) return;\r\n\r\n        // TODO remove this hack when react-rnd will fix bug with onMouseDown\r\n\r\n        console.log('clicked position = ' + '[' + clickX + ', ' + clickY + ']');\r\n        for(let i = 0; i < this.state.nodes.length; i++) {\r\n            let node = this.state.nodes[i];\r\n            console.log('node coordinates = ' + '[' + node.x + ', ' + node.y + '] : [' + (node.x+nodeWidth) + ', ' + (node.y + nodeHeight) + ']');\r\n        }\r\n\r\n        let clickedNodeIndex = this.isInNode(this.state.nodes, clickX, clickY);\r\n        if(clickedNodeIndex !== -1) {\r\n            if(!nodes[clickedNodeIndex].isBeingDragged) nodes[clickedNodeIndex].isSelected = !nodes[clickedNodeIndex].isSelected;\r\n        }\r\n\r\n        console.log('clickedNodeIndex = ' + clickedNodeIndex);\r\n\r\n        let contextMenu = this.state.contextMenu;\r\n        if(clickedNodeIndex === -1) {\r\n            // contextMenu = nodes.length === 0 ? this.mainContextMenu() : null;\r\n            for (let i = 0; i < nodes.length; i++) nodes[i].isSelected = false;\r\n        }\r\n        else{\r\n            if(e.button === 2) {\r\n                nodes[clickedNodeIndex].isSelected = true;\r\n                for(let i = 0; i < nodes.length; i++) if(i !== clickedNodeIndex) nodes[i].isSelected = false;\r\n                contextMenu = this.selectedNodeContextMenu();\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            nodes: nodes,\r\n            selectedNodeId: clickedNodeIndex === -1 ? null : clickedNodeIndex,\r\n            contextMenu: contextMenu,\r\n            mouseClickX: clickX,\r\n            mouseClickY: clickY\r\n        });\r\n    }\r\n\r\n    onChildSelectionChanged(childId, isSelected){\r\n        if(this.state.alert != null) return;\r\n\r\n        let nodes = this.state.nodes;\r\n        let contextMenu = this.state.contextMenu;\r\n        let selectedNodeId = this.state.selectedNodeId;\r\n\r\n        if(isSelected)\r\n            contextMenu = this.selectedNodeContextMenu();\r\n\r\n        for(let i = 0; i < nodes.length; i++){\r\n            if(nodes[i].id === childId) {\r\n                nodes[i].isSelected = isSelected;\r\n                selectedNodeId = i;\r\n            }\r\n            else\r\n                nodes[i].isSelected = false;\r\n        }\r\n        this.setState({nodes: nodes, selectedNodeId: selectedNodeId,contextMenu: contextMenu});\r\n    }\r\n\r\n    onChildPositionChanged(childId, x, y){\r\n        let nodes = this.state.nodes;\r\n        if(nodes == null) return;\r\n        let node = null;\r\n        for(let i = 0; i < nodes.length; i++){\r\n            if(nodes[i].id === childId){\r\n                node = nodes[i];\r\n                break;\r\n            }\r\n        }\r\n        if(node != null){\r\n            node.x = x;\r\n            node.y = y;\r\n            this.setState({nodes: nodes});\r\n        }\r\n    }\r\n\r\n    onChildStateChanged(childState){\r\n        let nodes = this.state.nodes;\r\n        let node = nodes[childState.id];\r\n        node.gender = childState.gender;\r\n        node.lastName = childState.lastName;\r\n        node.firstName = childState.firstName;\r\n        node.x = childState.x;\r\n        node.y = childState.y;\r\n        node.width = nodeWidth;\r\n        node.height = nodeHeight;\r\n        node.isSelected = childState.isSelected;\r\n        node.isBeingDragged = childState.isBeingDragged;\r\n        // node.relations = childState.relations;\r\n\r\n        console.log('tree onChildStateChanged(): new.x = ' + childState.x + ' new.y = ' + childState.y);\r\n\r\n        this.setState({nodes: nodes});\r\n    }\r\n\r\n    mainContextMenu() {\r\n        return (\r\n            <ContextMenu id={familyTreeMenuId}>\r\n                <Item\r\n                    onClick={() => this.handleMenuItemClick(MenuItems.CREATE_PERSON, this.state.mouseClickX, this.state.mouseClickY)}>\r\n                    Create person\r\n                </Item>\r\n            </ContextMenu>\r\n        );\r\n    }\r\n\r\n    selectedNodeContextMenu() {\r\n        return (\r\n            <ContextMenu id={familyTreeMenuId}>\r\n                <Item onClick={() => this.handleMenuItemClick(MenuItems.CREATE_PARENT, this.state.mouseClickX, this.state.mouseClickY)}>\r\n                    Create parent\r\n                </Item>\r\n                <Item onClick={() => this.handleMenuItemClick(MenuItems.CREATE_SPOUSE, this.state.mouseClickX, this.state.mouseClickY)}>\r\n                    Create spouse\r\n                </Item>\r\n                <Item onClick={() => this.handleMenuItemClick(MenuItems.CREATE_CHILD, this.state.mouseClickX, this.state.mouseClickY)}>\r\n                    Create child\r\n                </Item>\r\n            </ContextMenu>\r\n        );\r\n    }\r\n\r\n    renderFamilyTree() {\r\n        let nodesElements = [];\r\n        let linesElements = [];\r\n\r\n        let relations = this.state.relations;\r\n\r\n        for(let i = 0; i < this.state.nodes.length; i++) {\r\n            let node = this.state.nodes[i];\r\n            let nodeDrawId = 'person' + node.id;\r\n\r\n            nodesElements.push(\r\n                <FamilyTreeNode\r\n                    drawId={nodeDrawId}\r\n                    person={node}\r\n                    width={nodeWidth}\r\n                    height={nodeHeight}\r\n                    selectionChanged={this.onChildSelectionChanged}\r\n                    positionChanged={this.onChildPositionChanged}\r\n                    stateChanged={this.onChildStateChanged}\r\n                />);\r\n        }\r\n\r\n        for(let i = 0; i < relations.length; i++){\r\n            let relation = relations[i];\r\n\r\n            let mainNodeId = 'person' + relation.mainPersonId;\r\n            let mainNode = this.state.nodes[relation.mainPersonId];\r\n            let relationNodeId = 'person' + relation.relatedPersonId;\r\n            let relatedNode = this.state.nodes[relation.relatedPersonId];\r\n            let relationType = relation.relationType;\r\n\r\n            let fromAnchor = 'center';\r\n            let toAnchor = 'center';\r\n            let orientation = 'v';\r\n            switch (relationType) {\r\n                case RelationType.SPOUSE:\r\n                    if (mainNode.x < relatedNode.x) {\r\n                        fromAnchor = 'right';\r\n                        toAnchor = 'left';\r\n                    } else {\r\n                        fromAnchor = 'left';\r\n                        toAnchor = 'right';\r\n                    }\r\n                    orientation = 'h';\r\n                    break;\r\n                case RelationType.CHILD:\r\n                case RelationType.ADOPTED_CHILD:\r\n                    fromAnchor = 'top center';\r\n                    toAnchor = 'bottom center';\r\n                    break;\r\n                case RelationType.PARENT:\r\n                    fromAnchor = 'bottom center';\r\n                    toAnchor = 'top center';\r\n                    break;\r\n            }\r\n\r\n            // linesElements.push(<SteppedLineTo\r\n            //     from={mainNodeId}\r\n            //     to={relationNodeId}\r\n            //     fromAnchor={fromAnchor}\r\n            //     toAnchor={toAnchor}\r\n            //     orientation={orientation}/>)\r\n\r\n            let to = this.getNodeById(relation.mainPersonId);\r\n            let from = this.getNodeById(relation.relatedPersonId);\r\n\r\n            // console.log('FamilyTree render(): from node = ');\r\n            // console.log(from);\r\n            // console.log('FamilyTree render(): to node = ');\r\n            // console.log(to);\r\n\r\n            console.log('tree render(): from.X = ' + from.x + ' from.y = ' + from.y);\r\n            console.log('tree render(): to.X = ' + to.x + ' to.y = ' + to.y);\r\n\r\n            linesElements.push(<FamilyTreeNodeLine\r\n                fromNodes={[from]}\r\n                toNodes={[to]}\r\n            />)\r\n        }\r\n\r\n        return (\r\n            <div className='field'>\r\n                {nodesElements}\r\n                {linesElements}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let style = {\r\n            backgroundColor: 'red',\r\n            width: 'inherit',\r\n            height: 'inherit',\r\n            zIndex: 999\r\n        };\r\n\r\n        return (\r\n            <div className='field' onMouseDown={this.handleClick.bind(this)}>\r\n                <ContextMenuProvider className='field' id={familyTreeMenuId}>\r\n                    {this.renderFamilyTree()}\r\n                </ContextMenuProvider>\r\n                {this.state.contextMenu}\r\n                {this.state.alert}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FamilyTree;","import 'react-contexify/dist/ReactContexify.min.css'\r\nimport logo from './static/logo.svg'\r\nimport './style/App.css'\r\n\r\nimport React, {Component} from 'react';\r\nimport FamilyTree from './components/FamilyTree'\r\n\r\nconst familyTreeMenuId = 'family-context-menu';\r\nconst nodeHeight = 120;\r\nconst nodeWidth = 200;\r\n\r\nconst MenuItems = {\r\n    CREATE_PERSON: 'CREATE_PERSON',\r\n    CREATE_SPOUSE: 'CREATE_SPOUSE',\r\n    CREATE_SIBLING: 'CREATE_SIBLING',\r\n    CREATE_PARENT: 'CREATE_PARENT',\r\n    CREATE_CHILD: 'CREATE_CHILD',\r\n    EDIT: 'EDIT',\r\n    DELETE: 'DELETE'\r\n};\r\n\r\nconst RelationType = {\r\n    SIBLING: 'SIBLING',\r\n    SPOUSE: 'SPOUSE',\r\n    PARENT: 'PARENT',\r\n    ADOPTED_CHILD: 'ADOPTED_CHILD',\r\n    CHILD: 'CHILD'\r\n};\r\n\r\nconst RelationAntonym = (relation) => {\r\n    if(relation === RelationType.SIBLING) return RelationType.SIBLING;\r\n    if(relation === RelationType.SPOUSE) return RelationType.SPOUSE;\r\n    if(relation === RelationType.PARENT) return RelationType.CHILD;\r\n    if(relation === RelationType.CHILD) return RelationType.PARENT;\r\n    if(relation === RelationType.ADOPTED_CHILD) return RelationType.PARENT;\r\n};\r\n\r\nconst LineType = {\r\n    SOLID: 'SPLID',\r\n    DASHED: 'DASHED'\r\n};\r\n\r\nconst LineAnchor = {\r\n    TOP: 'TOP',\r\n    BOTTOM: 'BOTTOM',\r\n    LEFT: 'LEFT',\r\n    RIGHT: 'RIGHT'\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// TODO Пункты меню\r\n// TODO    Создать -> сын (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> дочь (выбор второго родителя, если было несколько браков)\r\n// TODO    Создать -> отец (недоступно, если уже есть 2 человека в родителях)\r\n// TODO    Создать -> мать (недоступно, если уже есть 2 человека в родителях)\r\n// TODO    Создать -> жена\r\n// TODO    Создать -> муж\r\n// TODO    Создать -> приемный сын (выбор второго родителя)\r\n// TODO    Создать -> приемная дочь (выбор второго родителя)\r\n// TODO    Создать -> приемный отец (выбор второго родителя)\r\n// TODO    Создать -> приемная мать (выбор второго родителя)\r\n// TODO Изменить\r\n// TODO Удалить\r\n// TODO Просмотр\r\n// TODO Выбор двух узлов и создание связи\r\n// TODO Не убирать создание нового человека\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message: '???'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://stridingsoft.ru/GenTrees')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({message: result.Message});\r\n                },\r\n                (error) => {\r\n                    this.setState({message: error.Message});\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        let versionText = 'v' + process.env.REACT_APP_VERSION;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img style={{float: 'left'}} src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                    <div style={{float: 'left'}}>\r\n                        <div className=\"App-title\">Genealogy Trees</div>\r\n                        <div className=\"App-hint\">Right-click to see menu</div>\r\n                    </div>\r\n                    <div style={{float: 'right', textAlign: 'right'}} className='App-hint'>\r\n                        <div>{versionText}</div>\r\n                        <div>{this.state.message}</div>\r\n                    </div>\r\n                </header>\r\n                <FamilyTree/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}